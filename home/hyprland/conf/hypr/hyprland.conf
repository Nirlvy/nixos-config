# Monitor setting
monitor=,1920x1080,0x0,1

# Execute your favorite apps at launch
exec-once = dbus-update-activation-environment --systemd -all
exec-once = systemctl --user import-environment XDG_SESSION_TYPE XDG_CURRENT_DESKTOP QT_QPA_PLATFORMTHEME
exec-once = /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec-once = hyprctl setcursor capitaine-cursors-light 24
exec-once = waybar & fcitx5 & hyprpaper & wl-paste --watch cliphist store & swayidle -w & sway-audio-idle-inhibit
exec-once = sh ./portal.sh
env = LIBVA_DRIVER_NAME,nvidia
env = XDG_SESSION_TYPE,wayland
env = GBM_BACKEND,nvidia-drm
env = __GLX_VENDOR_LIBRARY_NAME,nvidia
env = WLR_NO_HARDWARE_CURSORS,1

# Variables
input {
    kb_layout = us
    kb_variant =
    kb_model =
    kb_options =
    kb_rules =

    follow_mouse = 1
    numlock_by_default = true

    touchpad {
        natural_scroll = yes
    }

    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.
}

general {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more

    gaps_in = 1
    gaps_out = 3
    border_size = 2
    col.active_border = rgba(1affffee)
    col.inactive_border = rgba(595959aa)
    layout = dwindle
    no_cursor_warps = true
    no_border_on_floating = false
}

decoration {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more

    rounding = 3
    # multisample_edges = true
    inactive_opacity = 0.95

    drop_shadow = no #fuck wemeet
    shadow_range = 4
    shadow_render_power = 3
    col.shadow = rgba(1a1a1aee)

    blur {
        enabled = true
        size = 3
        passes = 1
        new_optimizations = true
    }
}

animations {
    enabled = yes

    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 7, myBezier
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = fade, 1, 7, default
    animation = workspaces, 1, 6, default
}

dwindle {
    preserve_split = yes # you probably want this
}

master {
    # I don't use it
    new_is_master = true
}

gestures {
    workspace_swipe = off
}

device:epic mouse V1 {
    sensitivity = -0.5
}

windowrulev2 =  workspace 3 silent,class:^(m-music-player)$,title:^(mMusicPlayer)$
windowrulev2 =  workspace 3 silent,class:^(M-music-player)$,title:^(mMusicPlayer)$
windowrulev2 =  float,class:^(qq)$,title:^(图片查看器)$
windowrulev2 =  float,class:^(QQ)$,title:^(图片查看器)$
windowrulev2 =  fullscreen,class:^(wps)$

# KeyWords
$mainMod = SUPER
$shiftMod = SHIFT

# Bind
bind = $mainMod, Q, exec, alacritty
bind = $mainMod, C, killactive, 
bind = $mainMod, F, togglefloating,
bind = $mainMod, M, exit, 
bind = $mainMod, D, exec, nautilus
bind = $mainMod, A, exec, $HOME/.config/wofi/launcher/launcher.sh
bind = $mainMod, E, exec, microsoft-edge-stable
bind = $mainMod, R, exec, xdg-open "http://127.0.0.1:2017"
bind = , PRINT, exec, grim -g "$(slurp -d)" - | wl-copy
bind = $mainMod, PRINT, exec, grim -g "$(slurp -d)" - | swappy -f - -o - | wl-copy
bind = $shiftMod, PRINT, exec, grim -g "$(slurp -d)" ~/Pictures/screenshot/$(date +%Y-%m-%d-%H:%M:%S).png
bind = $mainMod, V, exec, pkill wofi || cliphist list | wofi --show dmenu --prompt 'select' | cliphist decode | wl-copy
bind = $mainMod, P, exec, hyprpicker -a
bind = $mainMod+$shiftMod, L, exec, swaylock

# Num bind
bind = , XF86AudioPlay, exec, playerctl play-pause
bind = , XF86AudioNext, exec, playerctl next
bind = , XF86AudioPrev, exec, playerctl previous
bind = , XF86AudioStop, exec, playerctl stop

#Fn bind
bind = , XF86AudioMute, exec, env LANG=C amixer set Master toggle && notify-send "$(pactl list sinks | grep 'Mute:' | tail -n 1 | awk '{print $2}' | grep 'yes' &>/dev/null && echo '静音' || echo '解除静音')"
bind = , XF86AudioRaiseVolume, exec, env LANG=C pactl set-sink-volume 0 +5% && notify-send "音量" $(pactl list sinks | grep 'front-left:' | tail -n 1 | awk '{print $5}')
bind = , XF86AudioLowerVolume, exec, env LANG=C pactl set-sink-volume 0 -5% && notify-send "音量" $(pactl list sinks | grep 'front-left:' | tail -n 1 | awk '{print $5}')
bind = , 232, exec, env LANG=C light -U 5 && notify-send "亮度" $(light -G | awk '{printf("%d%%", $1)}')
bind = , 233, exec, env LANG=C light -A 5 && notify-send "亮度" $(light -G | awk '{printf("%d%%", $1)}')


# Move focus with mainMod + arrow keys
bind = $mainMod, H, movefocus, l
bind = $mainMod, L, movefocus, r
bind = $mainMod, K, movefocus, u
bind = $mainMod, J, movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e-1
bind = $mainMod, mouse_up, workspace, e+1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
